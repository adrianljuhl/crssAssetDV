@model IEnumerable<crssAssetDV.Models.Loan>

@{
    ViewBag.Title = "Loans";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



    <h3>Click to drag columns headers. <br> Drag a column to the first column to update graph with new data.</h3>
    <p>
        @Html.ActionLink("Create New Loan", "New")

    </p>


    <table id="loans" class=" table table-striped table-bordered dt-responsive nowrap" style="width:100%">
        <thead>
            <tr>
                <th>MIS</th>
                <th>Full Name</th>
                <th>Device</th>
                <th>Classroom</th>
                <th>Type of Loan</th>
                <th>Current</th>
                <th>Start Date</th>
                <th>Returned Date</th>
                <th>Special Notes</th>
                <th>Supplied Cable</th>
                <th>Supplied Cover</th>
                <th>Supplied Power Block</th>
                <th>OAMPS Updated</th>
                <th>Intune Updated</th>
                <th>EdQuip Signed</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    @section scripts

    {

        <script>
            $(document).ready(function () {
                moment.updateLocale(moment.locale(), { invalidDate: '' });
                var table = $("#loans").DataTable({
                    dom: 'PBlfrtip',
                    autoFill: false,
                    responsive: true,
                    fixedHeader: true,
                    colReorder: true,

                    "columnDefs": [
                        {
                            "targets": [0],
                            "visible": true,
                            "searchable": true
                        },
                        {
                            "targets": [1],
                            "visible": true,
                            "searchable": true
                        },
                        {
                            "targets": [2],
                            "visible": true,
                            "searchable": true
                        },
                        {
                            "targets": [3],
                            "visible": true,
                            "searchable": true
                        },
                        {
                            "targets": [4],
                            "visible": true,
                            "searchable": true
                        },
                        {
                            "targets": [5],
                            "visible": false,
                            "searchable": true
                        },
                        {
                            "targets": [6],
                            "visible": true,
                            "searchable": false
                        },
                        {
                            "targets": [7],
                            "visible": true,
                            "searchable": true
                        },
                        {
                            "targets": [8],
                            "visible": true,
                            "searchable": true
                        },
                        {
                            "targets": [9],
                            "visible": true,
                            "searchable": true
                        },
                        {
                            "targets": [10],
                            "visible": true,
                            "searchable": true
                        },
                        {
                            "targets": [11],
                            "visible": true,
                            "searchable": true
                        },
                        {
                            "targets": [12],
                            "visible": true,
                            "searchable": true
                        },
                        {
                            "targets": [13],
                            "visible": true,
                            "searchable": true
                        },
                        {
                            "targets": [14],
                            "visible": true,
                            "searchable": true
                        },
                        {
                            "targets": [15],
                            "visible": true,
                            "searchable": true
                        },
                    ],

                    ajax: {
                        url: "/api/loans",
                        dataSrc: ""

                    },


                    buttons: [

                        {
                            extend: 'copyHtml5',
                            exportOptions: {
                                columns: [0, ':visible']
                            }
                        },
                        {
                            extend: 'excelHtml5',
                            exportOptions: {
                                columns: [0, ':visible']
                            }
                        },
                        {
                            extend: 'csvHtml5',
                            exportOptions: {
                                columns: [0, ':visible']
                            }
                        },

                        {
                            extend: 'print',
                            exportOptions: {
                                columns: [0, ':visible']
                            }
                        },
                        'colvis'
                    ],



                    columns: [

                        {
                            data: "people.mis"
                        },
                        {
                            data: "people.fullName"
                        },

                        {
                            data: "device.edquip"
                        },

                        {
                            data: "classroom",
                            render: function (data, type, loan) {
                                return "<a href='/loans/edit/" + loan.id + "'>" + loan.classroom + "</a>";
                            }
                        },
                        {
                            data: "loanType.type"

                        },
                        {
                            data: "current",
                            render: function (data, type, loan) {
                                return "<a href='/loans/edit/" + loan.id + "'>" + loan.current + "</a>";
                            }
                        },
                        {
                            data: "startDate",
                            "render": function (data, type, full) {

                                if (type == 'display')

                                    return moment(data).format('dddd MMM do yyyy');

                                else

                                    return moment(data).format('yyyy/MM/dd HH:mm:ss');

                            }
                        },
                        {
                            data: "returnDate",
                            "render": function (data, type, full) {

                                if (type == 'display')

                                    return moment(data).format('dddd MMM do yyyy');

                                else

                                    return moment(data).format('yyyy/MM/dd HH:mm:ss');

                            }
                        },
                        {
                            data: "specialNote",
                            render: function (data, type, loan) {
                                return "<a href='/loans/edit/" + loan.id + "'>" + loan.specialNote + "</a>";
                            }
                        },
                        {
                            data: "suppliedCable",
                            render: function (data, type, loan) {
                                return "<a href='/loans/edit/" + loan.id + "'>" + loan.suppliedCable + "</a>";
                            }
                        },
                        {
                            data: "suppliedCover",
                            render: function (data, type, loan) {
                                return "<a href='/loans/edit/" + loan.id + "'>" + loan.suppliedCover + "</a>";
                            }
                        },
                        {
                            data: "suppliedPowerBlock",
                            render: function (data, type, loan) {
                                return "<a href='/loans/edit/" + loan.id + "'>" + loan.suppliedPowerBlock + "</a>";
                            }
                        },
                        {
                            data: "oampsUpdated",
                            render: function (data, type, loan) {
                                return "<a href='/loans/edit/" + loan.id + "'>" + loan.oampsUpdated + "</a>";
                            }
                        },
                        {
                            data: "intuneUpdated",
                            render: function (data, type, loan) {
                                return "<a href='/loans/edit/" + loan.id + "'>" + loan.intuneUpdated + "</a>";
                            }
                        },
                        {
                            data: "eduipSigned",
                            render: function (data, type, loan) {
                                return "<a href='/loans/edit/" + loan.id + "'>" + loan.edquipSigned + "</a>";
                            }
                        },

                        //{
                        //    data: "buildingLocation",

                        //    "render": function (data, type, device) {

                        //        if (data == null)

                        //            return ('');

                        //        else

                        //            return "<a href='/devices/edit/" + device.id + "'>" + device.buildingLocation + "</a>";
                        //    }
                        //},

                        {
                            data: "id",
                            render: function (data) {
                                return "<button class='btn-link js-delete' data-loan-id=" + data + ">Delete</button>";
                            }
                        },
                    ]

                });

                $("#loans").on("click", ".js-delete", function () {
                    var button = $(this);

                    bootbox.confirm("Are you sure you want to delete this loan entry?", function (result) {
                        if (result) {
                            $.ajax({
                                url: "/api/loans/" + button.attr("data-loan-id"),
                                method: "DELETE",
                                success: function () {
                                    table.row(button.parents("tr")).remove().draw();
                                }
                            });
                        }
                    });
                });

                // Create the chart with initial data
                var container = $('<div/>').insertBefore(table.table().container());

                var chart = Highcharts.chart(container[0], {
                    chart: {
                        type: 'pie',
                    },
                    title: {
                        text: '',
                    },
                    series: [
                        {
                            data: chartData(table),
                        },
                    ],
                });

                // On each draw, update the data in the chart
                table.on('draw', function () {
                    chart.series[0].setData(chartData(table));
                });
            });

            function chartData(table) {
                var counts = {};

                // Count the number of entries for each position
                table
                    .column(0, { search: 'applied' })
                    .data()
                    .each(function (val) {
                        if (counts[val]) {
                            counts[val] += 1;
                        } else {
                            counts[val] = 1;
                        }
                    });

                // And map it to the format highcharts uses
                return $.map(counts, function (val, key) {
                    return {
                        name: key,
                        y: val,
                    };
                });


            }


        </script>

    }

