namespace crssAssetDV.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class InitialModel : DbMigration
    {
        public override void Up()
        {
            CreateTable(
                "dbo.Devices",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Brand = c.String(),
                        Model = c.String(),
                        Description = c.String(),
                        OampsUpdated = c.Boolean(nullable: false),
                        IntuneUpdate = c.Boolean(nullable: false),
                        IndemnitySigned = c.Boolean(nullable: false),
                        DeviceTypeId = c.Byte(nullable: false),
                        Edquip = c.String(),
                        Serial = c.String(),
                        WriteOff = c.Boolean(nullable: false),
                        DeviceNotes_Id = c.Int(),
                        RepairTypes_Id = c.Int(),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.DeviceNotes", t => t.DeviceNotes_Id)
                .ForeignKey("dbo.DeviceTypes", t => t.DeviceTypeId, cascadeDelete: true)
                .ForeignKey("dbo.RepairTypes", t => t.RepairTypes_Id)
                .Index(t => t.DeviceTypeId)
                .Index(t => t.DeviceNotes_Id)
                .Index(t => t.RepairTypes_Id);
            
            CreateTable(
                "dbo.DeviceNotes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        DeviceNote = c.String(),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.DeviceTypes",
                c => new
                    {
                        Id = c.Byte(nullable: false),
                        DeviceTypes = c.String(nullable: false, maxLength: 40),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.RepairTypes",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        RepairType = c.String(),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.Loans",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        SuppliedPowerBlock = c.Boolean(nullable: false),
                        SuppliedCable = c.Boolean(nullable: false),
                        SuppliedCover = c.Boolean(nullable: false),
                        Approvers_Id = c.Int(),
                        Devices_Id = c.Int(),
                        People_Id = c.Int(),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Approvers", t => t.Approvers_Id)
                .ForeignKey("dbo.Devices", t => t.Devices_Id)
                .ForeignKey("dbo.People", t => t.People_Id)
                .Index(t => t.Approvers_Id)
                .Index(t => t.Devices_Id)
                .Index(t => t.People_Id);
            
            CreateTable(
                "dbo.Approvers",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        People_Id = c.Int(),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.People", t => t.People_Id)
                .Index(t => t.People_Id);
            
            CreateTable(
                "dbo.People",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        Staff = c.Boolean(nullable: false),
                        FirstName = c.String(nullable: false),
                        LastName = c.String(nullable: false),
                        Email = c.String(),
                        Address1 = c.String(),
                        Address2 = c.String(),
                        Address3 = c.String(),
                        Phone = c.String(),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.AspNetRoles",
                c => new
                    {
                        Id = c.String(nullable: false, maxLength: 128),
                        Name = c.String(nullable: false, maxLength: 256),
                    })
                .PrimaryKey(t => t.Id)
                .Index(t => t.Name, unique: true, name: "RoleNameIndex");
            
            CreateTable(
                "dbo.AspNetUserRoles",
                c => new
                    {
                        UserId = c.String(nullable: false, maxLength: 128),
                        RoleId = c.String(nullable: false, maxLength: 128),
                    })
                .PrimaryKey(t => new { t.UserId, t.RoleId })
                .ForeignKey("dbo.AspNetRoles", t => t.RoleId, cascadeDelete: true)
                .ForeignKey("dbo.AspNetUsers", t => t.UserId, cascadeDelete: true)
                .Index(t => t.UserId)
                .Index(t => t.RoleId);
            
            CreateTable(
                "dbo.AspNetUsers",
                c => new
                    {
                        Id = c.String(nullable: false, maxLength: 128),
                        Email = c.String(maxLength: 256),
                        EmailConfirmed = c.Boolean(nullable: false),
                        PasswordHash = c.String(),
                        SecurityStamp = c.String(),
                        PhoneNumber = c.String(),
                        PhoneNumberConfirmed = c.Boolean(nullable: false),
                        TwoFactorEnabled = c.Boolean(nullable: false),
                        LockoutEndDateUtc = c.DateTime(),
                        LockoutEnabled = c.Boolean(nullable: false),
                        AccessFailedCount = c.Int(nullable: false),
                        UserName = c.String(nullable: false, maxLength: 256),
                    })
                .PrimaryKey(t => t.Id)
                .Index(t => t.UserName, unique: true, name: "UserNameIndex");
            
            CreateTable(
                "dbo.AspNetUserClaims",
                c => new
                    {
                        Id = c.Int(nullable: false, identity: true),
                        UserId = c.String(nullable: false, maxLength: 128),
                        ClaimType = c.String(),
                        ClaimValue = c.String(),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.AspNetUsers", t => t.UserId, cascadeDelete: true)
                .Index(t => t.UserId);
            
            CreateTable(
                "dbo.AspNetUserLogins",
                c => new
                    {
                        LoginProvider = c.String(nullable: false, maxLength: 128),
                        ProviderKey = c.String(nullable: false, maxLength: 128),
                        UserId = c.String(nullable: false, maxLength: 128),
                    })
                .PrimaryKey(t => new { t.LoginProvider, t.ProviderKey, t.UserId })
                .ForeignKey("dbo.AspNetUsers", t => t.UserId, cascadeDelete: true)
                .Index(t => t.UserId);


            {

                Sql("INSERT INTO DeviceTypes (Id, DeviceTypes) VALUES (1, 'iPad')");
                Sql("INSERT INTO DeviceTypes (Id, DeviceTypes) VALUES (2, 'CFT Laptop')");
                Sql("INSERT INTO DeviceTypes (Id, DeviceTypes) VALUES (3, 'Network Switch')");
                Sql("INSERT INTO DeviceTypes (Id, DeviceTypes) VALUES (4, 'PC')");
                Sql("INSERT INTO DeviceTypes (Id, DeviceTypes) VALUES (5, 'Phone')");
                Sql("INSERT INTO DeviceTypes (Id, DeviceTypes) VALUES (6, 'School Laptop')");
                Sql("INSERT INTO DeviceTypes (Id, DeviceTypes) VALUES (7, 'Server')");
                Sql("INSERT INTO DeviceTypes (Id, DeviceTypes) VALUES (8, 'Phone')");
                Sql("INSERT INTO DeviceTypes (Id, DeviceTypes) VALUES (9, 'Other')");

                Sql("SET IDENTITY_INSERT People ON");
                Sql("INSERT INTO People (Id, Staff, FirstName, LastName) VALUES (1, 0, 'Ashtiva', 'Juhl')");
                Sql("INSERT INTO People (Id, Staff, FirstName, LastName) VALUES (2, 1, 'Adrian', 'Juhl')");
                Sql("INSERT INTO People (Id, Staff, FirstName, LastName) VALUES (3, 1, 'Michael', 'Gaga')");
                Sql("SET IDENTITY_INSERT People OFF");

                Sql("SET IDENTITY_INSERT RepairTypes ON");
                Sql("INSERT INTO RepairTypes (Id, RepairType) VALUES (1, 'Battery')");
                Sql("INSERT INTO RepairTypes (Id, RepairType) VALUES (2, 'Broken Screen')");
                Sql("INSERT INTO RepairTypes (Id, RepairType) VALUES (3, 'Home Button')");
                Sql("INSERT INTO RepairTypes (Id, RepairType) VALUES (4, 'Replace Power Supply')");
                Sql("SET IDENTITY_INSERT RepairTypes OFF");

                Sql("SET IDENTITY_INSERT Devices ON");
                Sql("INSERT INTO Devices (Id, DeviceTypeId, Edquip, Serial, OampsUpdated,IntuneUpdate,IndemnitySigned,WriteOff) VALUES (1, 2,'CFT1674063', 'C02T68CKFVH3','True','True','True','False')");
                Sql("SET IDENTITY_INSERT People OFF");
            }

        }
        
        public override void Down()
        {
            DropForeignKey("dbo.AspNetUserRoles", "UserId", "dbo.AspNetUsers");
            DropForeignKey("dbo.AspNetUserLogins", "UserId", "dbo.AspNetUsers");
            DropForeignKey("dbo.AspNetUserClaims", "UserId", "dbo.AspNetUsers");
            DropForeignKey("dbo.AspNetUserRoles", "RoleId", "dbo.AspNetRoles");
            DropForeignKey("dbo.Loans", "People_Id", "dbo.People");
            DropForeignKey("dbo.Loans", "Devices_Id", "dbo.Devices");
            DropForeignKey("dbo.Loans", "Approvers_Id", "dbo.Approvers");
            DropForeignKey("dbo.Approvers", "People_Id", "dbo.People");
            DropForeignKey("dbo.Devices", "RepairTypes_Id", "dbo.RepairTypes");
            DropForeignKey("dbo.Devices", "DeviceTypeId", "dbo.DeviceTypes");
            DropForeignKey("dbo.Devices", "DeviceNotes_Id", "dbo.DeviceNotes");
            DropIndex("dbo.AspNetUserLogins", new[] { "UserId" });
            DropIndex("dbo.AspNetUserClaims", new[] { "UserId" });
            DropIndex("dbo.AspNetUsers", "UserNameIndex");
            DropIndex("dbo.AspNetUserRoles", new[] { "RoleId" });
            DropIndex("dbo.AspNetUserRoles", new[] { "UserId" });
            DropIndex("dbo.AspNetRoles", "RoleNameIndex");
            DropIndex("dbo.Approvers", new[] { "People_Id" });
            DropIndex("dbo.Loans", new[] { "People_Id" });
            DropIndex("dbo.Loans", new[] { "Devices_Id" });
            DropIndex("dbo.Loans", new[] { "Approvers_Id" });
            DropIndex("dbo.Devices", new[] { "RepairTypes_Id" });
            DropIndex("dbo.Devices", new[] { "DeviceNotes_Id" });
            DropIndex("dbo.Devices", new[] { "DeviceTypeId" });
            DropTable("dbo.AspNetUserLogins");
            DropTable("dbo.AspNetUserClaims");
            DropTable("dbo.AspNetUsers");
            DropTable("dbo.AspNetUserRoles");
            DropTable("dbo.AspNetRoles");
            DropTable("dbo.People");
            DropTable("dbo.Approvers");
            DropTable("dbo.Loans");
            DropTable("dbo.RepairTypes");
            DropTable("dbo.DeviceTypes");
            DropTable("dbo.DeviceNotes");
            DropTable("dbo.Devices");
        }
    }
}
